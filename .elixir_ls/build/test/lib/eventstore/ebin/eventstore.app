{application,eventstore,
             [{applications,[kernel,stdlib,elixir,logger,poolboy,fsm,uuid,
                             postgrex]},
              {description,"EventStore using PostgreSQL for persistence.\n"},
              {modules,['Elixir.EventStore','Elixir.EventStore.Application',
                        'Elixir.EventStore.Config',
                        'Elixir.EventStore.EventData',
                        'Elixir.EventStore.Publisher',
                        'Elixir.EventStore.Publisher.PendingEvents',
                        'Elixir.EventStore.RecordedEvent',
                        'Elixir.EventStore.Registration',
                        'Elixir.EventStore.Registration.LocalRegistry',
                        'Elixir.EventStore.Serializer',
                        'Elixir.EventStore.Snapshots.SnapshotData',
                        'Elixir.EventStore.Snapshots.Snapshotter',
                        'Elixir.EventStore.Sql.Statements',
                        'Elixir.EventStore.Storage',
                        'Elixir.EventStore.Storage.Appender',
                        'Elixir.EventStore.Storage.Database',
                        'Elixir.EventStore.Storage.Initializer',
                        'Elixir.EventStore.Storage.QueryLatestEventNumber',
                        'Elixir.EventStore.Storage.QueryLatestStreamVersion',
                        'Elixir.EventStore.Storage.QueryStreamInfo',
                        'Elixir.EventStore.Storage.Reader',
                        'Elixir.EventStore.Storage.Reader.EventAdapter',
                        'Elixir.EventStore.Storage.Reader.Query',
                        'Elixir.EventStore.Storage.Snapshot',
                        'Elixir.EventStore.Storage.Snapshot.DeleteSnapshot',
                        'Elixir.EventStore.Storage.Snapshot.QuerySnapshot',
                        'Elixir.EventStore.Storage.Snapshot.RecordSnapshot',
                        'Elixir.EventStore.Storage.Stream',
                        'Elixir.EventStore.Storage.Subscription',
                        'Elixir.EventStore.Storage.Subscription.Ack',
                        'Elixir.EventStore.Storage.Subscription.Adapter',
                        'Elixir.EventStore.Storage.Subscription.All',
                        'Elixir.EventStore.Storage.Subscription.Query',
                        'Elixir.EventStore.Storage.Subscription.Subscribe',
                        'Elixir.EventStore.Storage.Subscription.Unsubscribe',
                        'Elixir.EventStore.Streams.AllStream',
                        'Elixir.EventStore.Streams.Stream',
                        'Elixir.EventStore.Streams.Supervisor',
                        'Elixir.EventStore.Subscriptions',
                        'Elixir.EventStore.Subscriptions.AllStreamsSubscription',
                        'Elixir.EventStore.Subscriptions.SingleStreamSubscription',
                        'Elixir.EventStore.Subscriptions.StreamSubscription',
                        'Elixir.EventStore.Subscriptions.StreamSubscriptionProvider',
                        'Elixir.EventStore.Subscriptions.Subscription',
                        'Elixir.EventStore.Subscriptions.SubscriptionState',
                        'Elixir.EventStore.Subscriptions.Supervisor',
                        'Elixir.EventStore.Supervisor',
                        'Elixir.EventStore.TermSerializer',
                        'Elixir.EventStore.Writer',
                        'Elixir.Mix.Tasks.EventStore.Create',
                        'Elixir.Mix.Tasks.EventStore.Drop',
                        'Elixir.Mix.Tasks.EventStore.Init',
                        'Elixir.Mix.Tasks.EventStore.Migrate']},
              {registered,[]},
              {vsn,"0.13.2"},
              {extra_applications,[logger,poolboy]},
              {mod,{'Elixir.EventStore.Application',[]}}]}.
